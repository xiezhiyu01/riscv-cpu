`default_nettype none
`include "defines.vh"

module alu(
    input wire[3:0]        op,
    input wire[31:0]       a,
    input wire[31:0]       b,
    output wire[31:0]       r,
    output wire[3:0]       flags
    );
        
    reg zf,cf,sf,vf;
    reg[31:0] result;
    
    assign flags = {zf,cf,sf,vf};
    assign r = result;
    
    always @(*) begin
        zf = 0;
        cf = 0;
        sf = 0;
        vf = 0;
        case (op)
            `ADD:begin
                result = a + b;
                if (result < a)
                    cf = 1'b1;
                else
                    cf = 1'b0;
                if ((result[31] != a[31]) && (a[31] == b[31]))
                    vf = 1'b1;
                else
                    vf = 1'b0;
            end
            
            `SUB : begin
                result = a - b;
                if (result > a)
                    cf = 1'b1;
                else
                    cf = 1'b0;
                if ((result[31] != a[31]) && (a[31] == b[31]))
                    vf = 1'b1;
                else
                    vf = 1'b0;
            end
            
           `AND : begin
                result = a & b;
            end
            
            `OR  : begin
                result = a | b;
            end
            
            `XOR : begin
                result = a ^ b;
            end
            
            `NOT : begin
                result = ~a;
            end
            
            `SLL : begin
                result = a << b;
            end
            
            `SRL : begin
                result = a >> b;
            end
            
            `SRA : begin
                result = $signed(a)>>>b;    
            end
            
            `ROL : begin
                result = (a << b) | (a >> (32-b)); 
            end 
            
            `RETB : begin
                result = b;
            end

            `ANDN : begin
                result = a & ~b;
            end

            `MINU : begin
                result = a < b ? a : b;
            end

            `CTZ : begin
                casez(a)
                    32'b00000000000000000000000000000000: result = 32;
                    32'b?0000000000000000000000000000000: result = 31;
                    32'b??000000000000000000000000000000: result = 30;
                    32'b???00000000000000000000000000000: result = 29;
                    32'b????0000000000000000000000000000: result = 28;
                    32'b?????000000000000000000000000000: result = 27;
                    32'b??????00000000000000000000000000: result = 26;
                    32'b???????0000000000000000000000000: result = 25;
                    32'b????????000000000000000000000000: result = 24;
                    32'b?????????00000000000000000000000: result = 23;
                    32'b??????????0000000000000000000000: result = 22;
                    32'b???????????000000000000000000000: result = 21;
                    32'b????????????00000000000000000000: result = 20;
                    32'b?????????????0000000000000000000: result = 19;
                    32'b??????????????000000000000000000: result = 18;
                    32'b???????????????00000000000000000: result = 17;
                    32'b????????????????0000000000000000: result = 16;
                    32'b?????????????????000000000000000: result = 15;
                    32'b??????????????????00000000000000: result = 14;
                    32'b???????????????????0000000000000: result = 13;
                    32'b????????????????????000000000000: result = 12;
                    32'b?????????????????????00000000000: result = 11;
                    32'b??????????????????????0000000000: result = 10;
                    32'b???????????????????????000000000: result = 9;
                    32'b????????????????????????00000000: result = 8;
                    32'b?????????????????????????0000000: result = 7;
                    32'b??????????????????????????000000: result = 6;
                    32'b???????????????????????????00000: result = 5;
                    32'b????????????????????????????0000: result = 4;
                    32'b?????????????????????????????000: result = 3;
                    32'b??????????????????????????????00: result = 2;
                    32'b???????????????????????????????0: result = 1;
                    default: result = 0;
                endcase
            end

            default :
                result = 0;
        endcase
        
        zf = result == 0? 1'b1: 1'b0;
        if (result[31] == 1'b1) 
            sf = 1'b1;
        else
            sf = 1'b0;
    end

endmodule
